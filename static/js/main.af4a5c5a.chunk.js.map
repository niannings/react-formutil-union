{"version":3,"sources":["../../src/utils.ts","../../src/context/UnionContext.ts","../../src/shared/EventBus.ts","../../src/hooks/useUnionContext.ts","../../src/hooks/useWatch.ts","../../src/hooks/useForceUpdate.tsx","../../src/hooks/useFormUnion.ts","../../src/index.tsx","components/Layout/index.tsx","components/Simple/index.tsx","App.tsx","index.tsx"],"names":["start","createContext","EventBus","pool","oncePool","listen","type","this","eventer","queue","taged","unlisten","pools","handler","name","p","remain","index","has","on","once","emit","Object","h","useUnionContext","useContext","getContext","useWatch","context","useMemo","Error","watchListRef","useRef","idRef","oldDepValuesRef","update","setFlag","useState","useCallback","flag","useForceUpdate","watch","core","current","w","noWatch","useEffect","a","o","utils","eventBus","store","depValues","k","cur","diffObj","b","useFormUnion","formutil","key","getForms","FormUnion","children","defaultValues","keys","ref","collection","collect","remove","deps","getValues","res","path","value","isEffectiveValue","tokens","len","i","next","Number","set","v","getValidStatus","util","batchDirty","dirty","getFirstError","arr","Array","Set","sortedKeys","error","getUnionDefaultValues","UnionContext","HOCWithFormUnion","props","options","rest","createElement","Comp","Layout","siderLeft","siderRight","className","MyForm","withForm","range","fill","useForm","gutter","map","_","id","span","label","size","withHOC","style","background","JSON","stringify","$params","MyFormDebug","params","values","reduce","acc","chunk","assign","App","Simple","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af4a5c5a.chunk.js","sourcesContent":["export function get(o: any, path: string) {\n  return path\n    .split(/[.[\\]]/g)\n    .filter(Boolean)\n    .reduce((cur, k) => (cur === null || cur === undefined ? cur : cur[k]), o)\n}\n\nfunction isEffectiveValue(o: any) {\n  return o !== null && o !== undefined\n}\n\nexport function set(o: any, path: string, value: any) {\n  if (!isEffectiveValue(o) || !path) {\n    return\n  }\n\n  const tokens = path.split(/[.[\\]]/g).filter(Boolean)\n  const len = tokens.length\n  let i = 1\n\n  while (i < len) {\n    const cur = tokens[i - 1]\n    const next = tokens[i]\n\n    if (!o[cur]) {\n      if (Number.isNaN(+next)) {\n        o[cur] = {}\n      } else {\n        o[cur] = []\n      }\n    }\n\n    o = o[cur]\n    i++\n  }\n\n  o[tokens[i - 1]] = value\n}\n\nlet start = 0\n\nexport function uniqueId(prefix?: string) {\n  return (prefix || '') + start++\n}\n\nexport function uniq(arr: any[]) {\n  return [...new Set(arr)]\n}\n","import { createContext } from 'react'\n\nexport default createContext(() => ({}))\n","type Handler<V = any> = (value?: V) => void\n\ninterface EventPoolItem {\n  queue: Handler[]\n  taged: Record<string, Handler>\n}\n\ntype EventPool = Record<string, EventPoolItem>\n\nclass EventBus<T extends string, V extends Partial<Record<T, any>> = any> {\n  protected pool: EventPool = {}\n  protected oncePool: EventPool = {}\n\n  protected listen(type: 0 | 1, name: T, handler: Handler, tag?: string) {\n    const pool = type === 0 ? this.pool : this.oncePool\n    let eventer: EventPoolItem = pool[name]\n\n    if (!eventer) {\n      eventer = pool[name] = {\n        queue: [],\n        taged: {}\n      }\n    }\n\n    if (tag) {\n      eventer.taged[tag] = handler\n    } else {\n      eventer.queue.push(handler)\n    }\n  }\n\n  public unlisten(name: T, handler: Handler | string) {\n    const pools = [this.pool, this.oncePool]\n\n    if (typeof handler === 'string') {\n      return pools.reduce((remain, p) => {\n        if (name in p) {\n          const pool = p[name]\n\n          if (handler in pool.taged) {\n            delete pool.taged[handler]\n            remain--\n          }\n        }\n\n        return remain\n      }, 2)\n    }\n\n    return pools.reduce((remain, p) => {\n      if (name in p) {\n        const pool = p[name]\n        const index = pool.queue.indexOf(handler)\n\n        if (index > -1) {\n          pool.queue.splice(index, 1)\n          remain += pool.queue.length\n        }\n      }\n\n      return remain\n    }, 0)\n  }\n\n  public has(name: T, handler: Handler | string) {\n    const pools = [this.pool, this.oncePool]\n\n    if (typeof handler === 'string') {\n      return pools.some((p) => name in p && handler in p[name].taged)\n    }\n\n    return pools.some((p) => name in p && p[name].queue.includes(handler))\n  }\n\n  public on(name: T, handler: Handler, tag?: string) {\n    this.listen(0, name, handler, tag)\n  }\n\n  public once(name: T, handler: Handler, tag?: string) {\n    this.listen(1, name, handler, tag)\n  }\n\n  public emit<N extends T>(name: N, value?: V[N]) {\n    const pools = [this.pool, this.oncePool]\n\n    pools.forEach((p) => {\n      const queue = []\n\n      if (name in p) {\n        if (p[name].taged) {\n          queue.push(...Object.values(p[name].taged))\n        }\n        if (p[name].queue) {\n          queue.push(...p[name].queue)\n        }\n      }\n\n      queue.forEach((h) => h(value))\n    })\n\n    if (name in this.oncePool) {\n      delete this.oncePool[name]\n    }\n  }\n}\n\nexport default EventBus\n\n// const bus = new EventBus<'say' | 'eat', { say: { a: number }; eat: string }>()\n\n// bus.on('say', console.log)\n// bus.once('eat', console.log)\n\n// bus.emit('say', { a: 3 })\n// bus.emit('eat', 'apple')\n// bus.emit('eat', 'apple')\n","import { RefObject, useContext } from 'react'\nimport { UnionUtils } from '../index'\nimport UnionContext from '../context/UnionContext'\n\nexport default function useUnionContext<T>() {\n  const getContext = useContext(UnionContext)\n\n  return getContext() as RefObject<UnionUtils<T>>\n}\n","import { useCallback, useEffect, useMemo, useRef } from 'react'\nimport useUnionContext from './useUnionContext'\nimport useForceUpdate from './useForceUpdate'\nimport { get, uniqueId } from '../utils'\n\nfunction diffObj(a: object, b: object) {\n  return Object.keys(a).filter((k) => a[k] !== b[k])\n}\n\nexport default function useWatch() {\n  const context = useUnionContext()\n\n  useMemo(() => {\n    if (!context.current) {\n      throw new Error('useFormUnion 只能在UnionForm组件作用域下使用')\n    }\n  }, [context])\n\n  const watchListRef = useRef<Set<string>>()\n  const idRef = useRef<string>()\n  const oldDepValuesRef = useRef<object>()\n  const update = useForceUpdate()\n\n  useMemo(() => {\n    watchListRef.current = new Set()\n    idRef.current = uniqueId('w_')\n  }, [])\n\n  const watch = useCallback(\n    (name: string | string[]) => {\n      const { core } = context.current!\n\n      const w = (name: string) => {\n        watchListRef.current?.add(name)\n        core.deps.add(name)\n        core.eventBus.on(name, update, idRef.current)\n      }\n\n      typeof name === 'string' ? w(name) : name.forEach(w)\n    },\n    [context, update]\n  )\n\n  const noWatch = useCallback(\n    (name: string | string[]) => {\n      const { core } = context.current!\n\n      const w = (name: string) => {\n        if (core.eventBus.unlisten(name, idRef.current as string) === 0) {\n          core.deps.delete(name)\n        }\n      }\n\n      typeof name === 'string' ? w(name) : name.forEach(w)\n    },\n    [context]\n  )\n\n  useEffect(() => {\n    const { core, utils } = context.current!\n\n    if (core.deps.size > 0) {\n      const { eventBus } = core\n      const store = utils.getValues()\n      const depValues = {}\n\n      for (const k of core.deps) {\n        depValues[k] = get(store, k)\n      }\n\n      diffObj(depValues, oldDepValuesRef.current || {}).forEach((k) => {\n        if (!eventBus.has(k, idRef.current!)) {\n          eventBus.emit(k)\n        }\n      })\n\n      oldDepValuesRef.current = depValues\n    }\n  })\n\n  useEffect(() => {\n    return () => {\n      for (const w of watchListRef.current!) {\n        noWatch(w)\n      }\n    }\n  }, [noWatch])\n\n  return {\n    watch,\n    noWatch\n  }\n}\n","import { useCallback, useState } from 'react'\n\nexport default function useForceUpdate() {\n  const [, setFlag] = useState(0)\n\n  return useCallback(() => setFlag((flag) => flag + 1), [])\n}\n","import { useEffect, useMemo } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport { $Formutil } from 'react-formutil'\nimport useUnionContext from './useUnionContext'\nimport useWatch from './useWatch'\n\nexport default function useFormUnion<T>(\n  formutil?: $Formutil,\n  key?: string | number\n) {\n  const context = useUnionContext<T>()\n\n  useMemo(() => {\n    if (!context.current) {\n      throw new Error('useFormUnion 只能在UnionForm组件作用域下使用')\n    }\n  }, [context])\n\n  useEffect(() => {\n    const { core } = context.current!\n\n    if (formutil && key !== undefined) {\n      core.collect(key, formutil)\n    }\n\n    return () => {\n      if (key !== undefined) {\n        core.remove(key)\n      }\n    }\n  }, [context, formutil, key])\n\n  return {\n    getForms: () => ({ ...context.current!.core.collection }),\n    ...context.current!.utils,\n    ...useWatch()\n  }\n}\n","import React, {\n  ComponentType,\n  createElement,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n  useRef\n} from 'react'\nimport { $Formutil } from 'react-formutil'\nimport { set, uniq } from './utils'\nimport UnionContext from './context/UnionContext'\nimport EventBus from './shared/EventBus'\n\ntype Model = 'array' | 'object'\n\nexport { default as useFormUnion } from './hooks/useFormUnion'\n\nexport interface UnionUtils<T> {\n  core: {\n    collection: Record<string, $Formutil>\n    collect: (key: string | number, formutil: $Formutil) => $Formutil\n    remove: (key: string | number) => boolean\n    type: Model\n    deps: Set<string>\n    eventBus: EventBus<string, T>\n    defaultValues?: T\n    keys?: string[]\n  }\n  utils: {\n    getValues: () => T\n    getValidStatus: () => boolean\n    batchDirty: (dirty: boolean) => void\n    getFirstError: () => string | undefined\n    getUnionDefaultValues: () => T | undefined\n  }\n}\n\nexport interface FormUnionProps<T> {\n  type: Model\n  defaultValues?: T\n  keys?: string[] // 当type === object时如果需要保证表单取值或取error的顺序\n}\n\nexport default function FormUnion<T>({\n  children,\n  defaultValues,\n  type,\n  keys\n}: PropsWithChildren<FormUnionProps<T>>) {\n  const ref = useRef<UnionUtils<T>>()\n\n  useMemo(() => {\n    if (ref.current) {\n      ref.current.core.type = type\n      ref.current.core.defaultValues = defaultValues\n      ref.current.core.keys = keys\n    } else {\n      const collection: Record<string | number, $Formutil> = {}\n      const collect = (key: string | number, formutil: $Formutil) =>\n        (collection[key] = formutil)\n      const remove = (key: string | number) => delete collection[key]\n      const getValues = () => {\n        let res = {} as T\n\n        if (type === 'array') {\n          res = [] as any\n        }\n\n        if (type === 'object') {\n          return Object.entries(collection).reduce((value, [k, v]) => {\n            set(value as any, k, v.$params)\n\n            return value\n          }, res)\n        }\n\n        return Object.entries(collection).reduce((value, [k, v]) => {\n          value[k] = v.$params\n\n          return value\n        }, res)\n      }\n      const getValidStatus = () => {\n        return Object.values(collection).every((util) => util.$valid)\n      }\n      const batchDirty = (dirty: boolean) => {\n        return Object.values(collection).forEach((util) =>\n          util.$batchDirty(dirty)\n        )\n      }\n      const getFirstError = () => {\n        let error: string | undefined\n        const sortedKeys = Array.isArray(keys)\n          ? uniq([...keys, ...Object.keys(collection)])\n          : Object.keys(collection)\n\n        sortedKeys.some((key: string) => {\n          const util = collection[key]\n\n          if (\n            util &&\n            util.$invalid &&\n            typeof util.$getFirstError === 'function'\n          ) {\n            error = util.$getFirstError()\n          }\n\n          return util?.$invalid\n        })\n\n        return error\n      }\n      const getUnionDefaultValues = () =>\n        ({ ...ref.current?.core.defaultValues } as T | undefined)\n\n      ref.current = {\n        core: {\n          collection,\n          collect,\n          remove,\n          deps: new Set(),\n          eventBus: new EventBus(),\n          type,\n          defaultValues,\n          keys\n        },\n        utils: {\n          getValues,\n          getValidStatus,\n          batchDirty,\n          getFirstError,\n          getUnionDefaultValues\n        }\n      }\n    }\n  }, [defaultValues, keys, type])\n\n  const getContext = useCallback(() => ref, [])\n\n  return (\n    <UnionContext.Provider value={getContext}>{children}</UnionContext.Provider>\n  )\n}\n\ntype UnionProps<T> = Partial<Omit<FormUnionProps<T>, 'children'>>\n\nFormUnion.withHOC = function withFormUnion<P, T>(\n  Comp: ComponentType<P>,\n  options: UnionProps<T>\n) {\n  const HOCWithFormUnion: React.FC<UnionProps<T> & P> = (props) => {\n    const { type, defaultValues, ...rest } = { ...options, ...props }\n\n    return (\n      <FormUnion type={type || 'object'} defaultValues={defaultValues}>\n        {createElement(Comp, rest as P)}\n      </FormUnion>\n    )\n  }\n\n  HOCWithFormUnion.displayName = `FormUnion.${\n    Comp.displayName || Comp.name || 'Anonymous'\n  }`\n\n  return HOCWithFormUnion\n}\n","import React, { ReactNode } from 'react'\nimport './style.css'\n\ninterface LayoutProps {\n  children: ReactNode\n  siderLeft?: ReactNode\n  siderRight?: ReactNode\n}\n\nexport default function Layout({\n  children,\n  siderLeft,\n  siderRight\n}: LayoutProps) {\n  return (\n    <div className='layout'>\n      {siderLeft && <div className='sider'>{siderLeft}</div>}\n      <div className='content'>{children}</div>\n      {siderRight && <div className='sider'>{siderRight}</div>}\n    </div>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Form, FormItem, useForm, withForm } from 'react-antd-formutil'\nimport { Input, Row, DatePicker } from 'antd'\nimport Col from 'antd/es/grid/col'\nimport FormUnion, { useFormUnion } from 'react-formutil-union'\nimport Layout from '../Layout'\n\nconst MyForm = withForm(MyFormContent)\n\nfunction SimpleContent() {\n  const range = useMemo(() => Array(100).fill(0), [])\n\n  return (\n    <Row gutter={24}>\n      <Col span={12} style={{ background: '#eee' }}>\n        <Form>\n          {(formutil) => (\n            <Layout\n              siderLeft={<pre>{JSON.stringify(formutil.$params, null, 2)}</pre>}\n            >\n              <h2>常规写法</h2>\n              <Row gutter={24}>\n                {range.map((_, index) => {\n                  return (\n                    <Col span={4} key={index}>\n                      <FormItem label={`输入-${index}`} name={`name_${index}`}>\n                        {index % 2 ? <Input size='small' /> : <DatePicker size='small'/>}\n                      </FormItem>\n                    </Col>\n                  )\n                })}\n              </Row>\n            </Layout>\n          )}\n        </Form>\n      </Col>\n      <Col span={12}>\n        <Layout siderRight={<MyFormDebug />}>\n          <h2>使用FormUnion</h2>\n          {Array(5)\n            .fill(0)\n            .map((_, index) => {\n              return <MyForm key={index} index={index} />\n            })}\n        </Layout>\n        <MyFormDebug />\n      </Col>\n    </Row>\n  )\n}\n\nexport default FormUnion.withHOC(SimpleContent, { type: 'object' })\n\nfunction MyFormDebug() {\n  const { watch, getValues } = useFormUnion<object>()\n  const params = Object.values(getValues()).reduce((acc, chunk) => Object.assign(acc, chunk), {})\n\n  watch('form_0.name_0')\n\n  return <pre>{JSON.stringify(params, null, 2)}</pre>\n}\n\nfunction MyFormContent({ index }: { index: number }) {\n  const range = useMemo(() => Array(20).fill(0), [])\n  const formutil = useForm()\n\n  useFormUnion(formutil, `form_${index}`)\n\n  return (\n    <Row gutter={24}>\n      {range.map((_, i) => {\n        const id = i + index * 20\n\n        return (\n          <Col span={4} key={i}>\n            <FormItem\n              label={`输入-${id}`}\n              name={`name_${id}`}\n            >\n              {id % 2 ? <Input size='small' /> : <DatePicker size='small'/>}\n            </FormItem>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n","import React from 'react'\nimport Simple from './components/Simple'\n\nconst App = () => {\n  return <Simple/>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\nimport 'moment/locale/zh-cn';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}